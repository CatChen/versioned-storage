# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main', '[0-9]+-[0-9]+-*']
  workflow_call:

permissions:
  contents: write

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v2
        id: get-github-app-token
        with:
          app-id: ${{ secrets.CHECK_GIT_STATUS_BOT_APP_ID }}
          private-key: ${{ secrets.CHECK_GIT_STATUS_BOT_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v5
        with:
          token: ${{ steps.get-github-app-token.outputs.token }}

      - name: Use Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: latest

      - run: deno install

      - name: Validate package exports
        run: deno eval 'import "./src/Storage.ts"'

      - run: deno fmt --check

      - run: deno lint

      - name: Validate JSR package version with NPM package version
        run: |
          NPM_VERSION=$(cat package.json | yarn --silent json 'version')
          JSR_VERSION=$(cat deno.json | yarn --silent json 'version')
          if [[ "$NPM_VERSION" != "$JSR_VERSION" ]]
          then
            echo "::error::Version mismatch between package.json ($NPM_VERSION) and deno.json ($JSR_VERSION)"
            exit 1
          fi

      - name: Push changes back to the Pull Request
        uses: CatChen/check-git-status-action@v1
        id: check-git-status
        with:
          fail-if-not-clean: ${{ github.actor != 'dependabot[bot]' || github.actor_id != 49699333 }}
          push-if-not-clean: true
          request-changes-if-not-clean: false
          push-token: ${{ steps.get-github-app-token.outputs.token }}
